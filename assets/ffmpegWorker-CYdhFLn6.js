var P=Object.defineProperty;var _=a=>{throw TypeError(a)};var W=(a,o,E)=>o in a?P(a,o,{enumerable:!0,configurable:!0,writable:!0,value:E}):a[o]=E;var c=(a,o,E)=>W(a,typeof o!="symbol"?o+"":o,E),U=(a,o,E)=>o.has(a)||_("Cannot "+E);var s=(a,o,E)=>(U(a,o,"read from private field"),E?E.call(a):o.get(a)),m=(a,o,E)=>o.has(a)?_("Cannot add the same private member more than once"):o instanceof WeakSet?o.add(a):o.set(a,E),I=(a,o,E,L)=>(U(a,o,"write to private field"),L?L.call(a,E):o.set(a,E),E);(function(){"use strict";var d,u,l,D,O,A,f;var a;(function(i){i.LOAD="LOAD",i.EXEC="EXEC",i.FFPROBE="FFPROBE",i.WRITE_FILE="WRITE_FILE",i.READ_FILE="READ_FILE",i.DELETE_FILE="DELETE_FILE",i.RENAME="RENAME",i.CREATE_DIR="CREATE_DIR",i.LIST_DIR="LIST_DIR",i.DELETE_DIR="DELETE_DIR",i.ERROR="ERROR",i.DOWNLOAD="DOWNLOAD",i.PROGRESS="PROGRESS",i.LOG="LOG",i.MOUNT="MOUNT",i.UNMOUNT="UNMOUNT"})(a||(a={}));const o=(()=>{let i=0;return()=>i++})(),E=new Error("ffmpeg is not loaded, call `await ffmpeg.load()` first"),L=new Error("called FFmpeg.terminate()");class b{constructor(){m(this,d,null);m(this,u,{});m(this,l,{});m(this,D,[]);m(this,O,[]);c(this,"loaded",!1);m(this,A,()=>{s(this,d)&&(s(this,d).onmessage=({data:{id:t,type:e,data:r}})=>{switch(e){case a.LOAD:this.loaded=!0,s(this,u)[t](r);break;case a.MOUNT:case a.UNMOUNT:case a.EXEC:case a.FFPROBE:case a.WRITE_FILE:case a.READ_FILE:case a.DELETE_FILE:case a.RENAME:case a.CREATE_DIR:case a.LIST_DIR:case a.DELETE_DIR:s(this,u)[t](r);break;case a.LOG:s(this,D).forEach(n=>n(r));break;case a.PROGRESS:s(this,O).forEach(n=>n(r));break;case a.ERROR:s(this,l)[t](r);break}delete s(this,u)[t],delete s(this,l)[t]})});m(this,f,({type:t,data:e},r=[],n)=>s(this,d)?new Promise((w,R)=>{const h=o();s(this,d)&&s(this,d).postMessage({id:h,type:t,data:e},r),s(this,u)[h]=w,s(this,l)[h]=R,n==null||n.addEventListener("abort",()=>{R(new DOMException(`Message # ${h} was aborted`,"AbortError"))},{once:!0})}):Promise.reject(E));c(this,"load",({classWorkerURL:t,...e}={},{signal:r}={})=>(s(this,d)||(I(this,d,t?new Worker(new URL(t,self.location.href),{type:"module"}):new Worker(new URL(""+new URL("worker-BAOIWoxA.js",self.location.href).href,self.location.href),{type:"module"})),s(this,A).call(this)),s(this,f).call(this,{type:a.LOAD,data:e},void 0,r)));c(this,"exec",(t,e=-1,{signal:r}={})=>s(this,f).call(this,{type:a.EXEC,data:{args:t,timeout:e}},void 0,r));c(this,"ffprobe",(t,e=-1,{signal:r}={})=>s(this,f).call(this,{type:a.FFPROBE,data:{args:t,timeout:e}},void 0,r));c(this,"terminate",()=>{const t=Object.keys(s(this,l));for(const e of t)s(this,l)[e](L),delete s(this,l)[e],delete s(this,u)[e];s(this,d)&&(s(this,d).terminate(),I(this,d,null),this.loaded=!1)});c(this,"writeFile",(t,e,{signal:r}={})=>{const n=[];return e instanceof Uint8Array&&n.push(e.buffer),s(this,f).call(this,{type:a.WRITE_FILE,data:{path:t,data:e}},n,r)});c(this,"mount",(t,e,r)=>{const n=[];return s(this,f).call(this,{type:a.MOUNT,data:{fsType:t,options:e,mountPoint:r}},n)});c(this,"unmount",t=>{const e=[];return s(this,f).call(this,{type:a.UNMOUNT,data:{mountPoint:t}},e)});c(this,"readFile",(t,e="binary",{signal:r}={})=>s(this,f).call(this,{type:a.READ_FILE,data:{path:t,encoding:e}},void 0,r));c(this,"deleteFile",(t,{signal:e}={})=>s(this,f).call(this,{type:a.DELETE_FILE,data:{path:t}},void 0,e));c(this,"rename",(t,e,{signal:r}={})=>s(this,f).call(this,{type:a.RENAME,data:{oldPath:t,newPath:e}},void 0,r));c(this,"createDir",(t,{signal:e}={})=>s(this,f).call(this,{type:a.CREATE_DIR,data:{path:t}},void 0,e));c(this,"listDir",(t,{signal:e}={})=>s(this,f).call(this,{type:a.LIST_DIR,data:{path:t}},void 0,e));c(this,"deleteDir",(t,{signal:e}={})=>s(this,f).call(this,{type:a.DELETE_DIR,data:{path:t}},void 0,e))}on(t,e){t==="log"?s(this,D).push(e):t==="progress"&&s(this,O).push(e)}off(t,e){t==="log"?I(this,D,s(this,D).filter(r=>r!==e)):t==="progress"&&I(this,O,s(this,O).filter(r=>r!==e))}}d=new WeakMap,u=new WeakMap,l=new WeakMap,D=new WeakMap,O=new WeakMap,A=new WeakMap,f=new WeakMap;var g;(function(i){i.MEMFS="MEMFS",i.NODEFS="NODEFS",i.NODERAWFS="NODERAWFS",i.IDBFS="IDBFS",i.WORKERFS="WORKERFS",i.PROXYFS="PROXYFS"})(g||(g={}));const S=i=>new Promise((t,e)=>{const r=new FileReader;r.onload=()=>{const{result:n}=r;n instanceof ArrayBuffer?t(new Uint8Array(n)):t(new Uint8Array)},r.onerror=n=>{var w,R;e(Error(`File could not be read! Code=${((R=(w=n==null?void 0:n.target)==null?void 0:w.error)==null?void 0:R.code)||-1}`))},r.readAsArrayBuffer(i)}),p=async i=>{let t;if(typeof i=="string")/data:_data\/([a-zA-Z]*);base64,([^"]*)/.test(i)?t=atob(i.split(",")[1]).split("").map(e=>e.charCodeAt(0)):t=await(await fetch(i)).arrayBuffer();else if(i instanceof URL)t=await(await fetch(i)).arrayBuffer();else if(i instanceof File||i instanceof Blob)t=await S(i);else return new Uint8Array;return new Uint8Array(t)};onmessage=async i=>{const{action:t,video:e,metadata:r,gap:n}=i.data;t=="getMetadata"?y(e):t=="getImgAndGif"&&B(e,r,n)};const y=async i=>{const t={duration:"",size:0,width:0,height:0},e=new b;await e.load(),await e.writeFile("test.mp4",await p(i)),await e.ffprobe(["-v","error","-select_streams","v:0","-show_entries","format=duration,size:stream=width,height","-of","default=noprint_wrappers=1","test.mp4","-o","out.txt"]);const r=await e.readFile("out.txt"),n=new Uint8Array(r),w=await new Blob([n.buffer]).text();for(const R of w.split(/[\r\n]+/)){const h=R.split("=");if(h.length==2)switch(h[0]){case"duration":t.duration=h[1];break;case"size":t.size=Number(h[1]);break;case"width":t.width=Number(h[1]);break;case"height":t.height=Number(h[1]);break}}postMessage({metadata:t}),postMessage({finished:!0})},B=async(i,t,e)=>{const r=new b;await r.load(),r.on("progress",({progress:C})=>{postMessage({progress:C})});const w=Number(t.duration)*.5,R=Number(e.to)-Number(e.from),h=Number(e.from);await r.writeFile("test.mp4",await p(i)),await r.exec(["-ss",w.toString(),"-i","test.mp4","-frames:v","1","-vf","scale='min(640,iw)':-1","-r","10","out.png"]);const k=await r.readFile("out.png");await r.exec(["-i","test.mp4","-t",R.toString(),"-ss",h.toString(),"-vf","scale='min(640,iw)':-1","-r","10","-f","gif","out.gif"]);const N=await r.readFile("out.gif"),M=new Uint8Array(N),T=URL.createObjectURL(new Blob([M.buffer],{type:"image/gif"}));postMessage({img:k,gif:N,gifUrl:T}),postMessage({finished:!0})}})();
